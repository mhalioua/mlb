<table class="table-bordered previous">
  <caption>(<%= "#{pitcher.throwhand}" %>) <%= "#{pitcher.name} Previous Games"%></caption>
  <thead>
	<tr>
	  <th></th><th>Date</th><th>Time</th><th>VS</th><th>IP</th><th>BB</th><th>H</th><th>R</th>
	  <th>Temp</th><th>Dew</th><th>Wind</th><th>Direct</th><th>D2</th><th>Baro</th><th>Humi</th><th>Park</th>
	  <th width="50">Total count</th>
	  <th width="50">Total runs1 average</th>
	  <th width="50">Total runs2 average</th>
	  <th width="50">Total hits average</th>
	  <th width="50">Home runs average</th>
	  <th width="50">+/- 1</th>
	  <th width="50">Total Count of +/- 1</th>
	  <th></th>
	  <th width="50">PARK TOTAL 1</th>
	  <th width="50">PARK TOTAL 2</th>
	  <th width="50">PARK TOTAL COUNT</th>
	  <th width="50">PARK ab-1</th>
	  <th width="50">PARK ab-1 COUNT</th>
	  <th>OPPONENT</th>
	  <th>IP</th>
	  <th>BB</th>
	  <th>H</th>
	  <th>R</th>
	</tr>
  </thead>
  <tbody>
	<%
		prev_pitchers = pitcher.prev_pitchers
		limit_number = 30
	%>
	<% if flag === 1 %>
		<%= render partial: "game/new/part_previous_pitcher_table", locals: { prev_pitchers: prev_pitchers.limit(15), start: 0, throwhand: pitcher.throwhand } %>
		<%= render partial: "game/new/part_previous_pitcher_table", locals: { prev_pitchers: prev_pitchers.limit(15).offset(15), start: 15, throwhand: pitcher.throwhand } %>
	<% else %>
		<%= render partial: "game/new/part_previous_pitcher_table", locals: { prev_pitchers: prev_pitchers.limit(20).offset(20), start: 20, throwhand: pitcher.throwhand } %>
		<%= render partial: "game/new/part_previous_pitcher_table", locals: { prev_pitchers: prev_pitchers.limit(20).offset(40), start: 40, throwhand: pitcher.throwhand } %>
		<% limit_number = 60 %>
	<% end %>
	<%
		ip_sum = []
		bb_sum = 0
		h_sum = 0
		r_sum = 0
		opposite_ip_sum = []
		opposite_bb_sum = 0
		opposite_h_sum = 0
		opposite_r_sum = 0
		prev_pitchers.limit(limit_number).each do |prev_pitcher|
			ip_sum.push(prev_pitcher.ip)
			bb_sum = bb_sum + prev_pitcher.bb
			h_sum = h_sum + prev_pitcher.h
			r_sum = r_sum + prev_pitcher.r
			opposite = prev_pitcher.game.lancers.find_by(starter: true, team_id: prev_pitcher.opp_team.id)
			if opposite
				opposite_ip_sum.push(opposite.ip)
				opposite_bb_sum = opposite_bb_sum + opposite.bb.to_i
				opposite_h_sum = opposite_h_sum + opposite.h.to_i
				opposite_r_sum = opposite_r_sum + opposite.r.to_i
			end
		end
		prev_pitchers_ip = add_innings(ip_sum)
		opposite_ip = add_innings(opposite_ip_sum)
	%>
	<tr>
	  <td></td>
	  <td colspan="3">Combined >>>></td>
	  <td bgcolor="yellow"><%= prev_pitchers_ip %></td>
	  <td bgcolor="yellow"><%= bb_sum %></td>
	  <td bgcolor="yellow"><%= h_sum %></td>
	  <td bgcolor="yellow"><%= r_sum %></td>
	  <td bgcolor="lightgreen"><%= ((bb_sum + h_sum) / prev_pitchers_ip.to_f).round(2) %></td>
	  <td colspan="17"></td>
	  <td colspan="3">Combined >>>></td>
	  <td bgcolor="lightgreen"><%= ((opposite_bb_sum + opposite_h_sum) / opposite_ip.to_f).round(2) %></td>
	  <td bgcolor="yellow"><%= opposite_ip %></td>
	  <td bgcolor="yellow"><%= opposite_bb_sum %></td>
	  <td bgcolor="yellow"><%= opposite_h_sum %></td>
	  <td bgcolor="yellow"><%= opposite_r_sum %></td>
	</tr>
  </tbody>
</table>
